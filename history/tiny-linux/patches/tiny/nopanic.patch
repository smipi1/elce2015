
configurable no-op of panic()


 include/linux/kernel.h |    6 	6 +	0 -	0 !
 init/Kconfig           |    9 	9 +	0 -	0 !
 init/main.c            |    1 	1 +	0 -	0 !
 kernel/panic.c         |   10 	6 +	4 -	0 !
 4 files changed, 22 insertions(+), 4 deletions(-)

Index: linux-2.6.23-rc9/include/linux/kernel.h
===================================================================
--- linux-2.6.23-rc9.orig/include/linux/kernel.h	2007-10-08 23:52:27.000000000 +0200
+++ linux-2.6.23-rc9/include/linux/kernel.h	2007-10-09 00:29:26.000000000 +0200
@@ -106,6 +106,11 @@
 
 extern struct atomic_notifier_head panic_notifier_list;
 extern long (*panic_blink)(long time);
+#ifndef CONFIG_PANIC
+NORET_TYPE static inline void panic(const char * fmt, ...)
+	__attribute__ ((NORET_AND format (printf, 1, 2)));
+NORET_TYPE static inline void panic(const char * fmt, ...) {}
+#else
 #ifdef CONFIG_FULL_PANIC
 NORET_TYPE void panic(const char * fmt, ...)
 	__attribute__ ((NORET_AND format (printf, 1, 2))) __cold;
@@ -113,6 +118,7 @@
 #define panic(fmt, ...) tiny_panic(0, ## __VA_ARGS__)
 NORET_TYPE void tiny_panic(int a, ...) ATTRIB_NORET;
 #endif
+#endif
 extern void oops_enter(void);
 extern void oops_exit(void);
 extern int oops_may_print(void);
Index: linux-2.6.23-rc9/init/Kconfig
===================================================================
--- linux-2.6.23-rc9.orig/init/Kconfig	2007-10-08 23:52:27.000000000 +0200
+++ linux-2.6.23-rc9/init/Kconfig	2007-10-09 00:30:20.000000000 +0200
@@ -463,7 +463,16 @@
 	  This option causes the bootmem allocator to print caller and size
           for each allocation.
 
+config PANIC
+	default y
+	bool "Enable panic reporting code" if EMBEDDED
+	help
+	  Disabling this completely removes panic handling code.
+          Warning: this can result in data loss if a panic condition
+          occurs, as the kernel may ignore the condition entirely.
+
 config FULL_PANIC
+        depends PANIC
 	default y
 	bool "Full panic reporting data" if EMBEDDED
 	help
Index: linux-2.6.23-rc9/init/main.c
===================================================================
--- linux-2.6.23-rc9.orig/init/main.c	2007-10-08 23:51:25.000000000 +0200
+++ linux-2.6.23-rc9/init/main.c	2007-10-08 23:52:27.000000000 +0200
@@ -808,6 +808,7 @@
 	run_init_process("/bin/sh");
 
 	panic("No init found.  Try passing init= option to kernel.");
+	return 0;
 }
 
 static int __init kernel_init(void * unused)
Index: linux-2.6.23-rc9/kernel/panic.c
===================================================================
--- linux-2.6.23-rc9.orig/kernel/panic.c	2007-10-08 23:52:27.000000000 +0200
+++ linux-2.6.23-rc9/kernel/panic.c	2007-10-08 23:52:27.000000000 +0200
@@ -39,15 +39,16 @@
 }
 __setup("panic=", panic_setup);
 
+/* Returns how long it waited in ms */
+long (*panic_blink)(long time);
+EXPORT_SYMBOL(panic_blink);
+
+#ifdef CONFIG_PANIC
 static long no_blink(long time)
 {
 	return 0;
 }
 
-/* Returns how long it waited in ms */
-long (*panic_blink)(long time);
-EXPORT_SYMBOL(panic_blink);
-
 /**
  *	panic - halt the system
  *	@fmt: The text string to print
@@ -160,6 +161,7 @@
 #else
 EXPORT_SYMBOL(tiny_panic);
 #endif
+#endif
 
 /**
  *	print_tainted - return a string to represent the kernel taint state.
