
configurable IGMP support


 include/linux/igmp.h       |   20 	20 +	0 -	0 !
 include/linux/mroute.h     |    4 	4 +	0 -	0 !
 init/Kconfig               |    8 	8 +	0 -	0 !
 net/ipv4/Makefile          |    3 	2 +	1 -	0 !
 net/ipv4/af_inet.c         |    2 	0 +	2 -	0 !
 net/ipv4/ip_sockglue.c     |    4 	4 +	0 -	0 !
 net/ipv4/sysctl_net_ipv4.c |    2 	2 +	0 -	0 !
 7 files changed, 40 insertions(+), 3 deletions(-)

Index: linux-2.6.23-rc9/include/linux/igmp.h
===================================================================
--- linux-2.6.23-rc9.orig/include/linux/igmp.h	2007-07-09 01:32:17.000000000 +0200
+++ linux-2.6.23-rc9/include/linux/igmp.h	2007-10-09 00:24:18.000000000 +0200
@@ -219,6 +219,7 @@
 #define IGMPV3_QQIC(value) IGMPV3_EXP(0x80, 4, 3, value)
 #define IGMPV3_MRC(value) IGMPV3_EXP(0x80, 4, 3, value)
 
+#ifdef CONFIG_IGMP
 extern int ip_check_mc(struct in_device *dev, __be32 mc_addr, __be32 src_addr, u16 proto);
 extern int igmp_rcv(struct sk_buff *);
 extern int ip_mc_join_group(struct sock *sk, struct ip_mreqn *imr);
@@ -240,6 +241,25 @@
 extern void ip_mc_dec_group(struct in_device *in_dev, __be32 addr);
 extern void ip_mc_inc_group(struct in_device *in_dev, __be32 addr);
 extern void ip_mc_rejoin_group(struct ip_mc_list *im);
+#else /* !CONFIG_IGMP */
+#define ip_check_mc(a, b, c, d) (0)
+#define igmp_rcv(a) (0)
+#define ip_mc_join_group(a, b) (0)
+#define ip_mc_leave_group(a, b) (0)
+#define ip_mc_drop_socket(a)
+#define ip_mc_source(a, b, c, d, e) (0)
+#define ip_mc_msfilter(a, b, c) (0)
+#define ip_mc_msfget(a, b, c, d) (0)
+#define ip_mc_gsfget(a, b, c, d) (0)
+#define ip_mc_sf_allow(a, b, c, d) (0)
+#define ip_mc_init_dev(a)
+#define ip_mc_destroy_dev(a)
+#define ip_mc_up(a)
+#define ip_mc_down(a)
+#define ip_mc_dec_group(a, b)
+#define ip_mc_inc_group(a, b)
+#define ip_mc_rejoin_group(a)
+#endif /* !CONFIG_IGMP */
 
 #endif
 #endif
Index: linux-2.6.23-rc9/include/linux/mroute.h
===================================================================
--- linux-2.6.23-rc9.orig/include/linux/mroute.h	2007-07-09 01:32:17.000000000 +0200
+++ linux-2.6.23-rc9/include/linux/mroute.h	2007-10-09 00:24:18.000000000 +0200
@@ -131,7 +131,11 @@
 extern int ip_mroute_setsockopt(struct sock *, int, char __user *, int);
 extern int ip_mroute_getsockopt(struct sock *, int, char __user *, int __user *);
 extern int ipmr_ioctl(struct sock *sk, int cmd, void __user *arg);
+#ifdef CONFIG_IGMP
 extern void ip_mr_init(void);
+#else
+static inline void ip_mr_init(void) {}
+#endif
 
 
 struct vif_device
Index: linux-2.6.23-rc9/init/Kconfig
===================================================================
--- linux-2.6.23-rc9.orig/init/Kconfig	2007-10-09 00:24:13.000000000 +0200
+++ linux-2.6.23-rc9/init/Kconfig	2007-10-09 00:29:51.000000000 +0200
@@ -392,6 +392,14 @@
 	help
 	  This enables the core device multicast list management code.
 
+config IGMP
+	depends NET
+	default y
+	bool "Enable IGMP support" if EMBEDDED && !IP_MULTICAST
+	help
+	  This includes support for the Internet group management
+	  protocol, used for multicast.
+
 config MEASURE_INLINES
 	default n
 	bool "Enable inline measurement" if EMBEDDED
Index: linux-2.6.23-rc9/net/ipv4/Makefile
===================================================================
--- linux-2.6.23-rc9.orig/net/ipv4/Makefile	2007-10-09 00:10:55.000000000 +0200
+++ linux-2.6.23-rc9/net/ipv4/Makefile	2007-10-09 00:24:18.000000000 +0200
@@ -9,11 +9,12 @@
 	     tcp.o tcp_input.o tcp_output.o tcp_timer.o tcp_ipv4.o \
 	     tcp_minisocks.o tcp_cong.o \
 	     datagram.o raw.o udp.o udplite.o \
-	     arp.o icmp.o devinet.o af_inet.o  igmp.o \
+	     arp.o icmp.o devinet.o af_inet.o \
 	     sysctl_net_ipv4.o fib_frontend.o fib_semantics.o
 
 obj-$(CONFIG_IP_FIB_HASH) += fib_hash.o
 obj-$(CONFIG_IP_FIB_TRIE) += fib_trie.o
+obj-$(CONFIG_IGMP) += igmp.o
 obj-$(CONFIG_INETPEER) += inetpeer.o
 obj-$(CONFIG_PROC_FS) += proc.o
 obj-$(CONFIG_IP_MULTIPLE_TABLES) += fib_rules.o
Index: linux-2.6.23-rc9/net/ipv4/af_inet.c
===================================================================
--- linux-2.6.23-rc9.orig/net/ipv4/af_inet.c	2007-10-08 23:51:25.000000000 +0200
+++ linux-2.6.23-rc9/net/ipv4/af_inet.c	2007-10-09 00:24:18.000000000 +0200
@@ -118,8 +118,6 @@
 
 DEFINE_SNMP_STAT(struct linux_mib, net_statistics) __read_mostly;
 
-extern void ip_mc_drop_socket(struct sock *sk);
-
 /* The inetsw table contains everything that inet_create needs to
  * build a new socket.
  */
Index: linux-2.6.23-rc9/net/ipv4/ip_sockglue.c
===================================================================
--- linux-2.6.23-rc9.orig/net/ipv4/ip_sockglue.c	2007-10-08 23:51:25.000000000 +0200
+++ linux-2.6.23-rc9/net/ipv4/ip_sockglue.c	2007-10-09 00:24:18.000000000 +0200
@@ -647,6 +647,7 @@
 			err = ip_mc_leave_group(sk, &mreq);
 		break;
 	}
+#ifdef CONFIG_IGMP
 	case IP_MSFILTER:
 	{
 		extern int sysctl_igmp_max_msf;
@@ -684,6 +685,7 @@
 		kfree(msf);
 		break;
 	}
+#endif
 	case IP_BLOCK_SOURCE:
 	case IP_UNBLOCK_SOURCE:
 	case IP_ADD_SOURCE_MEMBERSHIP:
@@ -801,6 +803,7 @@
 				   greqs.gsr_interface);
 		break;
 	}
+#ifdef CONFIG_IGMP
 	case MCAST_MSFILTER:
 	{
 		extern int sysctl_igmp_max_msf;
@@ -867,6 +870,7 @@
 		kfree(gsf);
 		break;
 	}
+#endif
 	case IP_ROUTER_ALERT:
 		err = ip_ra_control(sk, val ? 1 : 0, NULL);
 		break;
Index: linux-2.6.23-rc9/net/ipv4/sysctl_net_ipv4.c
===================================================================
--- linux-2.6.23-rc9.orig/net/ipv4/sysctl_net_ipv4.c	2007-10-09 00:10:55.000000000 +0200
+++ linux-2.6.23-rc9/net/ipv4/sysctl_net_ipv4.c	2007-10-09 00:24:18.000000000 +0200
@@ -483,6 +483,7 @@
 
 #endif
 #ifdef CONFIG_INETPEER
+#ifdef CONFIG_IGMP
 	{
 		.ctl_name	= NET_IPV4_IGMP_MAX_MSF,
 		.procname	= "igmp_max_msf",
@@ -491,6 +492,7 @@
 		.mode		= 0644,
 		.proc_handler	= &proc_dointvec
 	},
+#endif
 	{
 		.ctl_name	= NET_IPV4_INET_PEER_THRESHOLD,
 		.procname	= "inet_peer_threshold",
