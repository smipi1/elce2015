---
 include/linux/kernel.h |    2 	1 +	1 -	0 !
 init/Kconfig           |   24 	21 +	3 -	0 !
 kernel/printk.c        |   23 	12 +	11 -	0 !
 3 files changed, 34 insertions(+), 15 deletions(-)

Index: linux-2.6.23-tiny/include/linux/kernel.h
===================================================================
--- linux-2.6.23-tiny.orig/include/linux/kernel.h	2007-10-12 22:42:22.000000000 +0200
+++ linux-2.6.23-tiny/include/linux/kernel.h	2007-10-12 22:43:46.000000000 +0200
@@ -163,7 +163,7 @@
 
 extern void dump_thread(struct pt_regs *regs, struct user *dump);
 
-#ifdef CONFIG_PRINTK
+#if defined(CONFIG_PRINTK) || (defined(CONFIG_PRINTK_FUNC) && defined(DO_PRINTK))
 asmlinkage int vprintk(const char *fmt, va_list args)
 	__attribute__ ((format (printf, 1, 0)));
 asmlinkage int printk(const char * fmt, ...)
Index: linux-2.6.23-tiny/init/Kconfig
===================================================================
--- linux-2.6.23-tiny.orig/init/Kconfig	2007-10-12 22:43:46.000000000 +0200
+++ linux-2.6.23-tiny/init/Kconfig	2007-10-12 22:43:46.000000000 +0200
@@ -496,15 +496,33 @@
 	  disabling this option for embedded systems that do not use modules, a
 	  dynamic /dev tree, or dynamic device discovery.  Just say Y.
 
+config PRINTK_FUNC
+	default y
+	bool "Enable printk function in the kernel" if EMBEDDED
+	help
+	  This option controls whether the printk function is compiled
+	  into the kernel or not. Removing it eliminates a small amount of
+	  code size from the kernel, which is OK if it is not being used.
+	  See CONFIG_PRINTK to disable the function calls to printk(),
+	  which is where the big win comes in reducing kernel size.
+
 config PRINTK
 	default y
-	bool "Enable support for printk" if EMBEDDED
+	bool "Enable support for printk messages" if EMBEDDED
+	depends on PRINTK_FUNC
 	help
 	  This option enables normal printk support. Removing it
 	  eliminates most of the message strings from the kernel image
 	  and makes the kernel more or less silent. As this makes it
-	  very difficult to diagnose system problems, saying N here is
-	  strongly discouraged.
+	  very difficult to diagnose system problems, saying N here on
+	  non-embedded systems is strongly discouraged.
+
+	  With this set to 'N', if the printk function is still enabled,
+	  (see CONFIG_PRINTK_FUNC) you can enable printk messages from
+	  a single file, by putting "#define DO_PRINTK 1" at the top of
+	  the file.  This must appear before any #include lines.
+ 	  This makes it possible to have fine-grained control over
+	  which printk messages to include in the kernel.
 
 config BUG
 	bool "BUG() support" if EMBEDDED
Index: linux-2.6.23-tiny/kernel/printk.c
===================================================================
--- linux-2.6.23-tiny.orig/kernel/printk.c	2007-10-12 22:42:22.000000000 +0200
+++ linux-2.6.23-tiny/kernel/printk.c	2007-10-12 22:43:46.000000000 +0200
@@ -16,6 +16,11 @@
  *	01Mar01 Andrew Morton <andrewm@uow.edu.au>
  */
 
+/*
+ * have kernel.h produce real declarations, depending on configuration
+ */
+#define DO_PRINTK 1
+
 #include <linux/kernel.h>
 #include <linux/mm.h>
 #include <linux/tty.h>
@@ -114,13 +119,14 @@
 /* Flag: console code may call schedule() */
 static int console_may_schedule;
 
-#ifdef CONFIG_PRINTK
+#ifdef CONFIG_PRINTK_FUNC
 
 static char __log_buf[__LOG_BUF_LEN];
 static char *log_buf = __log_buf;
 static int log_buf_len = __LOG_BUF_LEN;
 static unsigned long logged_chars; /* Number of chars produced since last read+clear operation */
 
+
 static int __init log_buf_len_setup(char *str)
 {
 	unsigned long size = memparse(str, &str);
@@ -642,18 +648,13 @@
 EXPORT_SYMBOL(printk);
 EXPORT_SYMBOL(vprintk);
 
-#else
+#else /* !CONFIG_PRINTK_FUNC */
 
-asmlinkage long sys_syslog(int type, char __user *buf, int len)
-{
-	return -ENOSYS;
-}
-
-static void call_console_drivers(unsigned long start, unsigned long end)
-{
-}
+asmlinkage long sys_syslog(int type, char __user *buf, int len) { return 0; }
+int do_syslog(int type, char __user *buf, int len) { return 0; }
+static void call_console_drivers(unsigned long start, unsigned long end) {}
 
-#endif
+#endif /* !CONFIG_PRINTK_FUNC */
 
 /*
  * Set up a list of consoles.  Called from init/main.c
