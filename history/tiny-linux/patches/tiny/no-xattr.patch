Index: linux-2.6.23/fs/Kconfig
===================================================================
--- linux-2.6.23.orig/fs/Kconfig	2007-10-12 21:34:38.000000000 +0200
+++ linux-2.6.23/fs/Kconfig	2007-10-12 21:37:36.000000000 +0200
@@ -19,6 +19,7 @@
 config EXT2_FS_XATTR
 	bool "Ext2 extended attributes"
 	depends on EXT2_FS
+	depends on XATTR
 	help
 	  Extended attributes are name:value pairs associated with inodes by
 	  the kernel or by users (see the attr(5) manual page, or visit
@@ -101,6 +102,7 @@
 config EXT3_FS_XATTR
 	bool "Ext3 extended attributes"
 	depends on EXT3_FS
+	depends on XATTR
 	default y
 	help
 	  Extended attributes are name:value pairs associated with inodes by
@@ -166,6 +168,7 @@
 config EXT4DEV_FS_XATTR
 	bool "Ext4dev extended attributes"
 	depends on EXT4DEV_FS
+	depends on XATTR
 	default y
 	help
 	  Extended attributes are name:value pairs associated with inodes by
@@ -326,6 +329,7 @@
 config REISERFS_FS_XATTR
 	bool "ReiserFS extended attributes"
 	depends on REISERFS_FS
+	depends on XATTR
 	help
 	  Extended attributes are name:value pairs associated with inodes by
 	  the kernel or by users (see the attr(5) manual page, or visit
@@ -1241,6 +1245,7 @@
 config JFFS2_FS_XATTR
 	bool "JFFS2 XATTR support (EXPERIMENTAL)"
 	depends on JFFS2_FS && EXPERIMENTAL
+	depends on XATTR
 	default n
 	help
 	  Extended attributes are name:value pairs associated with inodes by
@@ -1903,6 +1908,7 @@
 config CIFS_XATTR
         bool "CIFS extended attributes"
         depends on CIFS
+	depends on XATTR
         help
           Extended attributes are name:value pairs associated with inodes by
           the kernel or by users (see the attr(5) manual page, or visit
Index: linux-2.6.23/fs/Makefile
===================================================================
--- linux-2.6.23.orig/fs/Makefile	2007-10-12 21:34:38.000000000 +0200
+++ linux-2.6.23/fs/Makefile	2007-10-12 21:37:36.000000000 +0200
@@ -9,7 +9,7 @@
 		char_dev.o stat.o exec.o pipe.o namei.o fcntl.o \
 		ioctl.o readdir.o select.o fifo.o locks.o dcache.o inode.o \
 		attr.o bad_inode.o file.o filesystems.o namespace.o aio.o \
-		seq_file.o xattr.o libfs.o fs-writeback.o \
+		seq_file.o libfs.o fs-writeback.o \
 		pnode.o drop_caches.o splice.o sync.o utimes.o \
 		stack.o
 
@@ -21,6 +21,7 @@
 
 obj-$(CONFIG_INOTIFY)		+= inotify.o
 obj-$(CONFIG_INOTIFY_USER)	+= inotify_user.o
+obj-$(CONFIG_XATTR)		+= xattr.o
 obj-$(CONFIG_EPOLL)		+= eventpoll.o
 obj-$(CONFIG_ANON_INODES)	+= anon_inodes.o
 obj-$(CONFIG_SIGNALFD)		+= signalfd.o
Index: linux-2.6.23/init/Kconfig
===================================================================
--- linux-2.6.23.orig/init/Kconfig	2007-10-12 21:37:36.000000000 +0200
+++ linux-2.6.23/init/Kconfig	2007-10-12 21:37:36.000000000 +0200
@@ -350,6 +350,12 @@
 	  some high performance threaded applications. Disabling
 	  this option saves about 5k.
 
+config XATTR
+	default y
+	bool "Enable filesystem extended attribute support" if EMBEDDED
+	help
+	  This enables the filesystem extended attribute syscalls.
+
 config MEASURE_INLINES
 	default n
 	bool "Enable inline measurement" if EMBEDDED
Index: linux-2.6.23/kernel/sys_ni.c
===================================================================
--- linux-2.6.23.orig/kernel/sys_ni.c	2007-10-12 21:37:36.000000000 +0200
+++ linux-2.6.23/kernel/sys_ni.c	2007-10-12 21:37:36.000000000 +0200
@@ -118,6 +118,18 @@
 cond_syscall(sys_io_submit);
 cond_syscall(sys_io_cancel);
 cond_syscall(sys_io_getevents);
+cond_syscall(sys_setxattr);
+cond_syscall(sys_lsetxattr);
+cond_syscall(sys_fsetxattr);
+cond_syscall(sys_getxattr);
+cond_syscall(sys_lgetxattr);
+cond_syscall(sys_fgetxattr);
+cond_syscall(sys_listxattr);
+cond_syscall(sys_llistxattr);
+cond_syscall(sys_flistxattr);
+cond_syscall(sys_removexattr);
+cond_syscall(sys_lremovexattr);
+cond_syscall(sys_fremovexattr);
 
 /* arch-specific weak syscall entries */
 cond_syscall(sys_pciconfig_read);
Index: linux-2.6.23/include/linux/xattr.h
===================================================================
--- linux-2.6.23.orig/include/linux/xattr.h	2007-10-12 21:34:38.000000000 +0200
+++ linux-2.6.23/include/linux/xattr.h	2007-10-12 21:37:36.000000000 +0200
@@ -51,10 +51,17 @@
 int vfs_setxattr(struct dentry *, char *, void *, size_t, int);
 int vfs_removexattr(struct dentry *, char *);
 
+#ifdef CONFIG_XATTR
 ssize_t generic_getxattr(struct dentry *dentry, const char *name, void *buffer, size_t size);
 ssize_t generic_listxattr(struct dentry *dentry, char *buffer, size_t buffer_size);
 int generic_setxattr(struct dentry *dentry, const char *name, const void *value, size_t size, int flags);
 int generic_removexattr(struct dentry *dentry, const char *name);
+#else
+#define generic_getxattr NULL
+#define generic_listxattr NULL
+#define generic_setxattr NULL
+#define generic_removexattr NULL
+#endif
 
 #endif  /*  __KERNEL__  */
 
