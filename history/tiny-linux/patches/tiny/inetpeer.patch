
configurable support for INET peer data tracking


 include/net/inetpeer.h     |   10 	10 +	0 -	0 !
 init/Kconfig               |    7 	7 +	0 -	0 !
 net/ipv4/Makefile          |    3 	2 +	1 -	0 !
 net/ipv4/sysctl_net_ipv4.c |    2 	2 +	0 -	0 !
 4 files changed, 21 insertions(+), 1 deletion(-)

Index: linux-2.6.23-rc9/include/net/inetpeer.h
===================================================================
--- linux-2.6.23-rc9.orig/include/net/inetpeer.h	2007-07-09 01:32:17.000000000 +0200
+++ linux-2.6.23-rc9/include/net/inetpeer.h	2007-10-09 00:10:55.000000000 +0200
@@ -31,6 +31,7 @@
 	unsigned long		tcp_ts_stamp;
 };
 
+#ifdef CONFIG_INETPEER
 void			inet_initpeers(void) __init;
 
 /* can be called with or without local BH being disabled */
@@ -51,5 +52,14 @@
 	spin_unlock_bh(&inet_peer_idlock);
 	return id;
 }
+#else
+
+#define inet_getpeer(a, b) (0)
+#define inet_putpeer(b)
+static void inline inet_initpeers(void) { }
+#define inet_getid(a, b) (0)
+
+#endif
+
 
 #endif /* _NET_INETPEER_H */
Index: linux-2.6.23-rc9/init/Kconfig
===================================================================
--- linux-2.6.23-rc9.orig/init/Kconfig	2007-10-09 00:10:54.000000000 +0200
+++ linux-2.6.23-rc9/init/Kconfig	2007-10-09 00:29:57.000000000 +0200
@@ -370,6 +370,13 @@
 	  Disabling this option removes support for configuring
 	  ethernet device features via ethtool. Saves about 6k.
 
+config INETPEER
+	default y
+	bool "Enable INET peer information storage" if EMBEDDED
+	help
+	  This allows storing various information about network peers.
+	  Disabling saves about 2k.
+
 config MEASURE_INLINES
 	default n
 	bool "Enable inline measurement" if EMBEDDED
Index: linux-2.6.23-rc9/net/ipv4/Makefile
===================================================================
--- linux-2.6.23-rc9.orig/net/ipv4/Makefile	2007-10-08 23:51:25.000000000 +0200
+++ linux-2.6.23-rc9/net/ipv4/Makefile	2007-10-09 00:29:53.000000000 +0200
@@ -2,7 +2,7 @@
 # Makefile for the Linux TCP/IP (INET) layer.
 #
 
-obj-y     := route.o inetpeer.o protocol.o \
+obj-y     := route.o protocol.o \
 	     ip_input.o ip_fragment.o ip_forward.o ip_options.o \
 	     ip_output.o ip_sockglue.o inet_hashtables.o \
 	     inet_timewait_sock.o inet_connection_sock.o \
@@ -14,6 +14,7 @@
 
 obj-$(CONFIG_IP_FIB_HASH) += fib_hash.o
 obj-$(CONFIG_IP_FIB_TRIE) += fib_trie.o
+obj-$(CONFIG_INETPEER) += inetpeer.o
 obj-$(CONFIG_PROC_FS) += proc.o
 obj-$(CONFIG_IP_MULTIPLE_TABLES) += fib_rules.o
 obj-$(CONFIG_IP_MROUTE) += ipmr.o
Index: linux-2.6.23-rc9/net/ipv4/sysctl_net_ipv4.c
===================================================================
--- linux-2.6.23-rc9.orig/net/ipv4/sysctl_net_ipv4.c	2007-07-09 01:32:17.000000000 +0200
+++ linux-2.6.23-rc9/net/ipv4/sysctl_net_ipv4.c	2007-10-09 00:29:53.000000000 +0200
@@ -482,6 +482,7 @@
 	},
 
 #endif
+#ifdef CONFIG_INETPEER
 	{
 		.ctl_name	= NET_IPV4_IGMP_MAX_MSF,
 		.procname	= "igmp_max_msf",
@@ -534,6 +535,7 @@
 		.proc_handler	= &proc_dointvec_jiffies,
 		.strategy	= &sysctl_jiffies
 	},
+#endif
 	{
 		.ctl_name	= NET_TCP_ORPHAN_RETRIES,
 		.procname	= "tcp_orphan_retries",
