Index: linux-2.6.23-tiny/fs/Kconfig
===================================================================
--- linux-2.6.23-tiny.orig/fs/Kconfig	2007-10-12 21:41:15.000000000 +0200
+++ linux-2.6.23-tiny/fs/Kconfig	2007-10-12 21:41:15.000000000 +0200
@@ -1526,7 +1526,7 @@
 
 config NFS_FS
 	tristate "NFS file system support"
-	depends on INET
+	depends on INET && FILE_LOCKING
 	select LOCKD
 	select SUNRPC
 	select NFS_ACL_SUPPORT if NFS_V3_ACL
Index: linux-2.6.23-tiny/fs/Makefile
===================================================================
--- linux-2.6.23-tiny.orig/fs/Makefile	2007-10-12 21:41:15.000000000 +0200
+++ linux-2.6.23-tiny/fs/Makefile	2007-10-12 22:42:24.000000000 +0200
@@ -7,7 +7,7 @@
 
 obj-y :=	open.o read_write.o file_table.o super.o \
 		char_dev.o stat.o exec.o pipe.o namei.o fcntl.o \
-		ioctl.o readdir.o select.o fifo.o locks.o dcache.o inode.o \
+		ioctl.o readdir.o select.o fifo.o dcache.o inode.o \
 		attr.o bad_inode.o file.o filesystems.o namespace.o aio.o \
 		seq_file.o libfs.o fs-writeback.o \
 		pnode.o drop_caches.o splice.o sync.o utimes.o \
@@ -21,6 +21,7 @@
 
 obj-$(CONFIG_INOTIFY)		+= inotify.o
 obj-$(CONFIG_INOTIFY_USER)	+= inotify_user.o
+obj-$(CONFIG_FILE_LOCKING)	+= locks.o
 obj-$(CONFIG_XATTR)		+= xattr.o
 obj-$(CONFIG_EPOLL)		+= eventpoll.o
 obj-$(CONFIG_ANON_INODES)	+= anon_inodes.o
Index: linux-2.6.23-tiny/fs/proc/proc_misc.c
===================================================================
--- linux-2.6.23-tiny.orig/fs/proc/proc_misc.c	2007-10-12 21:41:15.000000000 +0200
+++ linux-2.6.23-tiny/fs/proc/proc_misc.c	2007-10-12 21:41:15.000000000 +0200
@@ -635,6 +635,7 @@
 	return proc_calc_metrics(page, start, off, count, eof, len);
 }
 
+#ifdef CONFIG_FILE_LOCKING
 static int locks_read_proc(char *page, char **start, off_t off,
 				 int count, int *eof, void *data)
 {
@@ -644,6 +645,7 @@
 		*eof = 1;
 	return len;
 }
+#endif
 
 static int execdomains_read_proc(char *page, char **start, off_t off,
 				 int count, int *eof, void *data)
@@ -702,7 +704,9 @@
 #endif
 		{"filesystems",	filesystems_read_proc},
 		{"cmdline",	cmdline_read_proc},
+#ifdef CONFIG_FILE_LOCKING
 		{"locks",	locks_read_proc},
+#endif
 		{"execdomains",	execdomains_read_proc},
 		{NULL,}
 	};
Index: linux-2.6.23-tiny/include/linux/fs.h
===================================================================
--- linux-2.6.23-tiny.orig/include/linux/fs.h	2007-10-12 21:30:08.000000000 +0200
+++ linux-2.6.23-tiny/include/linux/fs.h	2007-10-13 12:46:33.000000000 +0200
@@ -845,6 +845,13 @@
 
 #include <linux/fcntl.h>
 
+extern void send_sigio(struct fown_struct *fown, int fd, int band);
+
+/* fs/sync.c */
+extern int do_sync_mapping_range(struct address_space *mapping, loff_t offset,
+			loff_t endbyte, unsigned int flags);
+
+#ifdef CONFIG_FILE_LOCKING
 extern int fcntl_getlk(struct file *, struct flock __user *);
 extern int fcntl_setlk(unsigned int, struct file *, unsigned int,
 			struct flock __user *);
@@ -855,14 +862,9 @@
 			struct flock64 __user *);
 #endif
 
-extern void send_sigio(struct fown_struct *fown, int fd, int band);
 extern int fcntl_setlease(unsigned int fd, struct file *filp, long arg);
 extern int fcntl_getlease(struct file *filp);
 
-/* fs/sync.c */
-extern int do_sync_mapping_range(struct address_space *mapping, loff_t offset,
-			loff_t endbyte, unsigned int flags);
-
 /* fs/locks.c */
 extern void locks_init_lock(struct file_lock *);
 extern void locks_copy_lock(struct file_lock *, struct file_lock *);
@@ -884,6 +886,36 @@
 extern int lock_may_read(struct inode *, loff_t start, unsigned long count);
 extern int lock_may_write(struct inode *, loff_t start, unsigned long count);
 
+#else /* !CONFIG_FILE_LOCKING */
+#define fcntl_getlk(a, b) (-EINVAL)
+#define fcntl_setlk(a, b, c, d) (-EACCES)
+#if BITS_PER_LONG == 32
+#define fcntl_getlk64(a, b) (-EINVAL)
+#define fcntl_setlk64(a, b, c, d) (-EACCES)
+#endif
+#define fcntl_setlease(a, b, c) (0)
+#define fcntl_getlease(a) (0)
+#define locks_init_lock(a)
+#define locks_copy_lock(a, b)
+#define locks_remove_posix(a, b)
+#define locks_remove_flock(a)
+#define posix_test_lock(a, b) (0)
+#define posix_lock_file(a, b) (-ENOLCK)
+#define posix_lock_file_wait(a, b) (-ENOLCK)
+#define posix_block_lock(a, b)
+#define posix_unblock_lock(a, b) (-ENOENT)
+#define posix_locks_deadlock(a, b) (0)
+#define vfs_test_lock(a, b) (0)
+#define vfs_lock_file(a, b, c, d) (-ENOLCK)
+#define vfs_cancel_lock(a, b) (0)
+#define flock_lock_file_wait(a, b) (-ENOLCK)
+#define __break_lease(a, b) (0)
+#define lease_get_mtime(a, b)
+#define lock_may_read(a, b, c) (1)
+#define lock_may_write(a, b, c) (1)
+#define steal_locks(a)
+#endif /* !CONFIG_FILE_LOCKING */
+
 struct fasync_struct {
 	int	magic;
 	int	fa_fd;
@@ -1362,6 +1394,7 @@
 #define FLOCK_VERIFY_READ  1
 #define FLOCK_VERIFY_WRITE 2
 
+#ifdef CONFIG_FILE_LOCKING
 extern int locks_mandatory_locked(struct inode *);
 extern int locks_mandatory_area(int, struct inode *, struct file *, loff_t, size_t);
 
@@ -1402,6 +1435,18 @@
 	return 0;
 }
 
+#else /* !CONFIG_FILE_LOCKING */
+
+#define locks_mandatory_locked(a) (0)
+#define locks_mandatory_area(a, b, c, d, e) (0)
+#define MANDATORY_LOCK(inode) (0)
+#define locks_verify_locked(a) (0)
+#define locks_verify_area(a, b, c, d, e) (0 && (b))
+#define locks_verify_truncate(a, b, c) (0)
+#define break_lease(a, b) (0)
+
+#endif /* !CONFIG_FILE_LOCKING */
+
 /* fs/open.c */
 
 extern int do_truncate(struct dentry *, loff_t start, unsigned int time_attrs,
Index: linux-2.6.23-tiny/init/Kconfig
===================================================================
--- linux-2.6.23-tiny.orig/init/Kconfig	2007-10-12 21:41:15.000000000 +0200
+++ linux-2.6.23-tiny/init/Kconfig	2007-10-12 22:42:25.000000000 +0200
@@ -356,6 +356,12 @@
 	help
 	  This enables the filesystem extended attribute syscalls.
 
+config FILE_LOCKING
+	default y
+	bool "Enable POSIX file locking API" if EMBEDDED
+	help
+	  This enables standard file locking support.
+
 config MEASURE_INLINES
 	default n
 	bool "Enable inline measurement" if EMBEDDED
Index: linux-2.6.23-tiny/kernel/sys_ni.c
===================================================================
--- linux-2.6.23-tiny.orig/kernel/sys_ni.c	2007-10-12 21:41:15.000000000 +0200
+++ linux-2.6.23-tiny/kernel/sys_ni.c	2007-10-12 21:41:15.000000000 +0200
@@ -130,6 +130,7 @@
 cond_syscall(sys_removexattr);
 cond_syscall(sys_lremovexattr);
 cond_syscall(sys_fremovexattr);
+cond_syscall(sys_flock);
 
 /* arch-specific weak syscall entries */
 cond_syscall(sys_pciconfig_read);
Index: linux-2.6.23-tiny/kernel/sysctl.c
===================================================================
--- linux-2.6.23-tiny.orig/kernel/sysctl.c	2007-10-12 21:41:15.000000000 +0200
+++ linux-2.6.23-tiny/kernel/sysctl.c	2007-10-13 12:21:59.000000000 +0200
@@ -1143,6 +1143,7 @@
 		.extra1		= &minolduid,
 		.extra2		= &maxolduid,
 	},
+#ifdef CONFIG_FILE_LOCKING
 	{
 		.ctl_name	= FS_LEASES,
 		.procname	= "leases-enable",
@@ -1151,6 +1152,7 @@
 		.mode		= 0644,
 		.proc_handler	= &proc_dointvec,
 	},
+#endif
 #ifdef CONFIG_DNOTIFY
 	{
 		.ctl_name	= FS_DIR_NOTIFY,
@@ -1162,6 +1164,7 @@
 	},
 #endif
 #ifdef CONFIG_MMU
+#ifdef CONFIG_FILE_LOCKING
 	{
 		.ctl_name	= FS_LEASE_TIME,
 		.procname	= "lease-break-time",
@@ -1173,6 +1176,7 @@
 		.extra1		= &zero,
 		.extra2		= &two,
 	},
+#endif
 	{
 		.ctl_name	= FS_AIO_NR,
 		.procname	= "aio-nr",
Index: linux-2.6.23-tiny/fs/lockd/svclock.c
===================================================================
--- linux-2.6.23-tiny.orig/fs/lockd/svclock.c	2007-10-12 21:30:08.000000000 +0200
+++ linux-2.6.23-tiny/fs/lockd/svclock.c	2007-10-12 21:41:15.000000000 +0200
@@ -24,6 +24,7 @@
 #include <linux/errno.h>
 #include <linux/kernel.h>
 #include <linux/sched.h>
+#include <linux/fs.h>
 #include <linux/smp_lock.h>
 #include <linux/sunrpc/clnt.h>
 #include <linux/sunrpc/svc.h>
