
Configurable ethtool support


 include/linux/ethtool.h |   18 	18 +	0 -	0 !
 init/Kconfig            |    8 	8 +	0 -	0 !
 net/core/Makefile       |    3 	2 +	1 -	0 !
 net/core/dev.c          |    4 	4 +	0 -	0 !
 4 files changed, 32 insertions(+), 1 deletion(-)

Index: linux-2.6.23-rc9/include/linux/ethtool.h
===================================================================
--- linux-2.6.23-rc9.orig/include/linux/ethtool.h	2007-10-08 23:51:25.000000000 +0200
+++ linux-2.6.23-rc9/include/linux/ethtool.h	2007-10-09 00:10:54.000000000 +0200
@@ -260,6 +260,7 @@
 
 struct net_device;
 
+#ifdef CONFIG_ETHTOOL
 /* Some generic methods drivers may use in their ethtool_ops */
 u32 ethtool_op_get_link(struct net_device *dev);
 u32 ethtool_op_get_tx_csum(struct net_device *dev);
@@ -272,6 +273,23 @@
 int ethtool_op_set_tso(struct net_device *dev, u32 data);
 u32 ethtool_op_get_ufo(struct net_device *dev);
 int ethtool_op_set_ufo(struct net_device *dev, u32 data);
+#else
+static inline u32 ethtool_noop1(struct net_device *dev) { return 0; }
+static inline int ethtool_noop2(struct net_device *dev, u32 data) { return 0; }
+static inline int ethtool_noop3(struct net_device *dev,
+				struct ethtool_perm_addr *addr, u32 data) { return 0; }
+#define ethtool_op_get_link ethtool_noop1
+#define ethtool_op_get_tx_csum ethtool_noop1
+#define ethtool_op_set_tx_csum ethtool_noop2
+#define ethtool_op_set_tx_hw_csum ethtool_noop2
+#define ethtool_op_get_sg ethtool_noop1
+#define ethtool_op_set_sg ethtool_noop2
+#define ethtool_op_get_tso ethtool_noop1
+#define ethtool_op_set_tso ethtool_noop2
+#define ethtool_op_get_perm_addr ethtool_noop3
+#define ethtool_op_get_ufo ethtool_noop1
+#define ethtool_op_set_ufo ethtool_noop2
+#endif
 
 /**
  * &ethtool_ops - Alter and report network device settings
Index: linux-2.6.23-rc9/init/Kconfig
===================================================================
--- linux-2.6.23-rc9.orig/init/Kconfig	2007-10-08 23:52:33.000000000 +0200
+++ linux-2.6.23-rc9/init/Kconfig	2007-10-09 00:29:59.000000000 +0200
@@ -362,6 +362,14 @@
 	help
 	  This enables standard file locking support.
 
+config ETHTOOL
+	depends NET
+	default y
+	bool "Enable ethtool support" if EMBEDDED
+	help
+	  Disabling this option removes support for configuring
+	  ethernet device features via ethtool. Saves about 6k.
+
 config MEASURE_INLINES
 	default n
 	bool "Enable inline measurement" if EMBEDDED
Index: linux-2.6.23-rc9/net/core/Makefile
===================================================================
--- linux-2.6.23-rc9.orig/net/core/Makefile	2007-07-09 01:32:17.000000000 +0200
+++ linux-2.6.23-rc9/net/core/Makefile	2007-10-09 00:29:57.000000000 +0200
@@ -7,10 +7,11 @@
 
 obj-$(CONFIG_SYSCTL) += sysctl_net_core.o
 
-obj-y		     += dev.o ethtool.o dev_mcast.o dst.o netevent.o \
+obj-y		     += dev.o dev_mcast.o dst.o netevent.o \
 			neighbour.o rtnetlink.o utils.o link_watch.o filter.o
 
 obj-$(CONFIG_XFRM) += flow.o
+obj-$(CONFIG_ETHTOOL) += ethtool.o
 obj-$(CONFIG_SYSFS) += net-sysfs.o
 obj-$(CONFIG_NET_PKTGEN) += pktgen.o
 obj-$(CONFIG_NETPOLL) += netpoll.o
Index: linux-2.6.23-rc9/net/core/dev.c
===================================================================
--- linux-2.6.23-rc9.orig/net/core/dev.c	2007-10-08 23:51:25.000000000 +0200
+++ linux-2.6.23-rc9/net/core/dev.c	2007-10-09 00:10:55.000000000 +0200
@@ -3196,6 +3196,7 @@
 			return ret;
 
 		case SIOCETHTOOL:
+#ifdef CONFIG_ETHTOOL
 			dev_load(ifr.ifr_name);
 			rtnl_lock();
 			ret = dev_ethtool(&ifr);
@@ -3208,6 +3209,9 @@
 					ret = -EFAULT;
 			}
 			return ret;
+#else
+			return -EINVAL;
+#endif
 
 		/*
 		 *	These ioctl calls:
