
configurable support for doublefault reporting


 tiny-mpm/arch/i386/kernel/Makefile     |    7 ++++---
 tiny-mpm/arch/i386/kernel/cpu/common.c |    2 ++
 tiny-mpm/init/Kconfig                  |    9 +++++++++
 3 files changed, 15 insertions(+), 3 deletions(-)

Index: tiny/arch/i386/kernel/Makefile
===================================================================
--- tiny.orig/arch/i386/kernel/Makefile	2005-10-10 17:39:10.000000000 -0700
+++ tiny/arch/i386/kernel/Makefile	2005-10-10 17:42:15.000000000 -0700
@@ -7,7 +7,7 @@ extra-y := head.o init_task.o vmlinux.ld
 obj-y	:= process.o semaphore.o signal.o entry.o traps.o irq.o vm86.o \
 		ptrace.o time.o ioport.o ldt.o setup.o i8259.o sys_i386.o \
 		pci-dma.o i386_ksyms.o i387.o dmi_scan.o bootflag.o \
-		doublefault.o quirks.o i8237.o
+		quirks.o i8237.o
 
 obj-y				+= cpu/
 obj-y				+= timers/
@@ -34,6 +34,7 @@ obj-y				+= sysenter.o vsyscall.o
 obj-$(CONFIG_ACPI_SRAT) 	+= srat.o
 obj-$(CONFIG_HPET_TIMER) 	+= time_hpet.o
 obj-$(CONFIG_EFI) 		+= efi.o efi_stub.o
+obj-$(CONFIG_DOUBLEFAULT) 	+= doublefault.o
 obj-$(CONFIG_EARLY_PRINTK)	+= early_printk.o
 
 EXTRA_AFLAGS   := -traditional
Index: tiny/arch/i386/kernel/cpu/common.c
===================================================================
--- tiny.orig/arch/i386/kernel/cpu/common.c	2005-10-10 17:32:31.000000000 -0700
+++ tiny/arch/i386/kernel/cpu/common.c	2005-10-10 17:41:59.000000000 -0700
@@ -635,8 +635,10 @@ void __devinit cpu_init(void)
 	load_TR_desc();
 	load_LDT(&init_mm.context);
 
+#ifdef CONFIG_DOUBLEFAULT
 	/* Set up doublefault TSS pointer in the GDT */
 	__set_tss_desc(cpu, GDT_ENTRY_DOUBLEFAULT_TSS, &doublefault_tss);
+#endif
 
 	/* Clear %fs and %gs. */
 	asm volatile ("xorl %eax, %eax; movl %eax, %fs; movl %eax, %gs");
Index: tiny/init/Kconfig
===================================================================
--- tiny.orig/init/Kconfig	2005-10-10 17:41:53.000000000 -0700
+++ tiny/init/Kconfig	2005-10-10 17:41:59.000000000 -0700
@@ -329,6 +329,15 @@ config AUDIT_BOOTMEM
 	  This option causes the bootmem allocator to print caller and size
           for each allocation.
 
+config DOUBLEFAULT
+	depends X86
+	default y if X86
+	bool "Enable doublefault exception handler" if EMBEDDED
+	help
+          This option allows trapping of rare doublefault exceptions that
+          would otherwise cause a system to silently reboot. Disabling this
+          option saves about 4k.
+
 config BASE_FULL
 	default y
 	bool "Enable full-sized data structures for core" if EMBEDDED
